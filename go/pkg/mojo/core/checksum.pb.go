// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mojo/core/checksum.proto

package core

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Checksum_Algorithm int32

const (
	Checksum_ALGORITHM_UNSPECIFIED Checksum_Algorithm = 0
	Checksum_ALGORITHM_MD_5        Checksum_Algorithm = 1
	Checksum_ALGORITHM_SHA_1       Checksum_Algorithm = 2
	Checksum_ALGORITHM_SHA_256     Checksum_Algorithm = 3
	Checksum_ALGORITHM_SHA_512     Checksum_Algorithm = 4
)

var Checksum_Algorithm_name = map[int32]string{
	0: "ALGORITHM_UNSPECIFIED",
	1: "ALGORITHM_MD_5",
	2: "ALGORITHM_SHA_1",
	3: "ALGORITHM_SHA_256",
	4: "ALGORITHM_SHA_512",
}

var Checksum_Algorithm_value = map[string]int32{
	"ALGORITHM_UNSPECIFIED": 0,
	"ALGORITHM_MD_5":        1,
	"ALGORITHM_SHA_1":       2,
	"ALGORITHM_SHA_256":     3,
	"ALGORITHM_SHA_512":     4,
}

func (x Checksum_Algorithm) String() string {
	return proto.EnumName(Checksum_Algorithm_name, int32(x))
}

func (Checksum_Algorithm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1bbde829709695af, []int{0, 0}
}

type Checksum struct {
	Algorithm            Checksum_Algorithm `protobuf:"varint,1,opt,name=algorithm,proto3,enum=mojo.core.Checksum_Algorithm" json:"algorithm,omitempty"`
	Value                string             `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Checksum) Reset()         { *m = Checksum{} }
func (m *Checksum) String() string { return proto.CompactTextString(m) }
func (*Checksum) ProtoMessage()    {}
func (*Checksum) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bbde829709695af, []int{0}
}
func (m *Checksum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Checksum.Unmarshal(m, b)
}
func (m *Checksum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Checksum.Marshal(b, m, deterministic)
}
func (m *Checksum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Checksum.Merge(m, src)
}
func (m *Checksum) XXX_Size() int {
	return xxx_messageInfo_Checksum.Size(m)
}
func (m *Checksum) XXX_DiscardUnknown() {
	xxx_messageInfo_Checksum.DiscardUnknown(m)
}

var xxx_messageInfo_Checksum proto.InternalMessageInfo

func (m *Checksum) GetAlgorithm() Checksum_Algorithm {
	if m != nil {
		return m.Algorithm
	}
	return Checksum_ALGORITHM_UNSPECIFIED
}

func (m *Checksum) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterEnum("mojo.core.Checksum_Algorithm", Checksum_Algorithm_name, Checksum_Algorithm_value)
	proto.RegisterType((*Checksum)(nil), "mojo.core.Checksum")
}

func init() { proto.RegisterFile("mojo/core/checksum.proto", fileDescriptor_1bbde829709695af) }

var fileDescriptor_1bbde829709695af = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xc8, 0xcd, 0xcf, 0xca,
	0xd7, 0x4f, 0xce, 0x2f, 0x4a, 0xd5, 0x4f, 0xce, 0x48, 0x4d, 0xce, 0x2e, 0x2e, 0xcd, 0xd5, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0xc9, 0xe8, 0x81, 0x64, 0x94, 0xba, 0x98, 0xb8, 0x38,
	0x9c, 0xa1, 0xb2, 0x42, 0x21, 0x5c, 0x9c, 0x89, 0x39, 0xe9, 0xf9, 0x45, 0x99, 0x25, 0x19, 0xb9,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0xb2, 0x7a, 0x70, 0xb5, 0x7a, 0x30, 0x75, 0x7a, 0x8e,
	0x30, 0x45, 0x4e, 0xe2, 0xaf, 0xee, 0xc9, 0x0b, 0xc3, 0xf5, 0xe8, 0xe4, 0xe7, 0x66, 0x96, 0xa4,
	0xe6, 0x16, 0x94, 0x54, 0x06, 0x21, 0x0c, 0x12, 0xd2, 0xe4, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d,
	0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x74, 0x12, 0x7e, 0x75, 0x4f, 0x9e, 0x1f, 0x2c, 0x80, 0xa4,
	0x1c, 0xa2, 0x42, 0xa9, 0x96, 0x8b, 0x13, 0x6e, 0xb6, 0x90, 0x24, 0x97, 0xa8, 0xa3, 0x8f, 0xbb,
	0x7f, 0x90, 0x67, 0x88, 0x87, 0x6f, 0x7c, 0xa8, 0x5f, 0x70, 0x80, 0xab, 0xb3, 0xa7, 0x9b, 0xa7,
	0xab, 0x8b, 0x00, 0x83, 0x90, 0x10, 0x17, 0x1f, 0x42, 0xca, 0xd7, 0x25, 0xde, 0x54, 0x80, 0x51,
	0x48, 0x98, 0x8b, 0x1f, 0x21, 0x16, 0xec, 0xe1, 0x18, 0x6f, 0x28, 0xc0, 0x24, 0x24, 0xca, 0x25,
	0x88, 0x2a, 0x68, 0x64, 0x6a, 0x26, 0xc0, 0x8c, 0x29, 0x6c, 0x6a, 0x68, 0x24, 0xc0, 0xe2, 0x14,
	0xc5, 0x25, 0x96, 0x5f, 0x94, 0x0e, 0xf6, 0x71, 0x4e, 0x62, 0x5e, 0x3a, 0xc2, 0xeb, 0x4e, 0xbc,
	0x30, 0xbf, 0x07, 0x80, 0x02, 0x30, 0x80, 0x31, 0x4a, 0x3f, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49,
	0x2f, 0x39, 0x3f, 0x57, 0x1f, 0xa4, 0x4c, 0x17, 0xa4, 0x01, 0x12, 0xd8, 0xe9, 0xf9, 0xfa, 0x05,
	0xd9, 0xe9, 0xfa, 0xf0, 0xd0, 0xb7, 0x06, 0x11, 0x49, 0x6c, 0xe0, 0xa0, 0x37, 0x06, 0x04, 0x00,
	0x00, 0xff, 0xff, 0xab, 0xe8, 0xbe, 0xb8, 0x96, 0x01, 0x00, 0x00,
}
