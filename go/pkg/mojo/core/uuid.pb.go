// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mojo/core/uuid.proto

package core

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Uuid struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Uuid) Reset()         { *m = Uuid{} }
func (m *Uuid) String() string { return proto.CompactTextString(m) }
func (*Uuid) ProtoMessage()    {}
func (*Uuid) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2d5c44657173ee9, []int{0}
}
func (m *Uuid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Uuid.Unmarshal(m, b)
}
func (m *Uuid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Uuid.Marshal(b, m, deterministic)
}
func (m *Uuid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Uuid.Merge(m, src)
}
func (m *Uuid) XXX_Size() int {
	return xxx_messageInfo_Uuid.Size(m)
}
func (m *Uuid) XXX_DiscardUnknown() {
	xxx_messageInfo_Uuid.DiscardUnknown(m)
}

var xxx_messageInfo_Uuid proto.InternalMessageInfo

func (m *Uuid) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*Uuid)(nil), "mojo.core.Uuid")
}

func init() { proto.RegisterFile("mojo/core/uuid.proto", fileDescriptor_f2d5c44657173ee9) }

var fileDescriptor_f2d5c44657173ee9 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc9, 0xcd, 0xcf, 0xca,
	0xd7, 0x4f, 0xce, 0x2f, 0x4a, 0xd5, 0x2f, 0x2d, 0xcd, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x04, 0x89, 0xea, 0x81, 0x44, 0x95, 0x0c, 0xb9, 0x58, 0x42, 0x4b, 0x33, 0x53, 0x84,
	0x34, 0xb9, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x78, 0x9c, 0x84,
	0x5f, 0xdd, 0x93, 0xe7, 0x07, 0x0b, 0xe8, 0xe4, 0xe7, 0x66, 0x96, 0xa4, 0xe6, 0x16, 0x94, 0x54,
	0x06, 0x41, 0x54, 0x38, 0x85, 0x71, 0x89, 0xe5, 0x17, 0xa5, 0xeb, 0x81, 0xcc, 0xc8, 0x49, 0xcc,
	0x83, 0x30, 0xc0, 0x86, 0x39, 0x71, 0x82, 0x8c, 0x0a, 0x00, 0x59, 0x11, 0xc0, 0x18, 0xa5, 0x9f,
	0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab, 0x0f, 0x52, 0xa2, 0x0b, 0x52, 0x0c,
	0x71, 0x4a, 0x7a, 0xbe, 0x7e, 0x41, 0x76, 0xba, 0x3e, 0xdc, 0x6d, 0xd6, 0x20, 0x22, 0x89, 0x0d,
	0xec, 0x38, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x72, 0xc5, 0x43, 0x71, 0xb4, 0x00, 0x00,
	0x00,
}
