// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mojo/core/percentage.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Percentage struct {
	Val                  int32    `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" gorm:"-" xml:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" gorm:"-" xml:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" gorm:"-" xml:"-" bson:"-"`
}

func (m *Percentage) Reset()         { *m = Percentage{} }
func (m *Percentage) String() string { return proto.CompactTextString(m) }
func (*Percentage) ProtoMessage()    {}
func (*Percentage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a64755a265026bd, []int{0}
}
func (m *Percentage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Percentage.Unmarshal(m, b)
}
func (m *Percentage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Percentage.Marshal(b, m, deterministic)
}
func (m *Percentage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Percentage.Merge(m, src)
}
func (m *Percentage) XXX_Size() int {
	return xxx_messageInfo_Percentage.Size(m)
}
func (m *Percentage) XXX_DiscardUnknown() {
	xxx_messageInfo_Percentage.DiscardUnknown(m)
}

var xxx_messageInfo_Percentage proto.InternalMessageInfo

func (m *Percentage) GetVal() int32 {
	if m != nil {
		return m.Val
	}
	return 0
}

func init() {
	proto.RegisterType((*Percentage)(nil), "mojo.core.Percentage")
}

func init() { proto.RegisterFile("mojo/core/percentage.proto", fileDescriptor_3a64755a265026bd) }

var fileDescriptor_3a64755a265026bd = []byte{
	// 169 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xca, 0xcd, 0xcf, 0xca,
	0xd7, 0x4f, 0xce, 0x2f, 0x4a, 0xd5, 0x2f, 0x48, 0x2d, 0x4a, 0x4e, 0xcd, 0x2b, 0x49, 0x4c, 0x4f,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0xc9, 0xe9, 0x81, 0xe4, 0x94, 0x0c, 0xb9,
	0xb8, 0x02, 0xe0, 0xd2, 0x42, 0xca, 0x5c, 0xcc, 0x65, 0x89, 0x39, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0xac, 0x4e, 0x82, 0xaf, 0xee, 0xc9, 0xf3, 0x96, 0x25, 0xe6, 0xe8, 0xe4, 0xe7, 0x66, 0x96, 0xa4,
	0xe6, 0x16, 0x94, 0x54, 0x06, 0x81, 0x64, 0x9d, 0x12, 0x66, 0x3c, 0x96, 0x63, 0xe0, 0x12, 0xcb,
	0x2f, 0x4a, 0xd7, 0x03, 0x99, 0x93, 0x93, 0x98, 0x07, 0x61, 0x80, 0x0d, 0x74, 0xe2, 0x47, 0x18,
	0x17, 0x00, 0xb2, 0x2c, 0x80, 0x31, 0x4a, 0x3f, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39,
	0x3f, 0x57, 0x1f, 0xa4, 0x50, 0x17, 0xa4, 0x05, 0xe2, 0xb4, 0xf4, 0x7c, 0xfd, 0x82, 0xec, 0x74,
	0x7d, 0xb8, 0x5b, 0xad, 0x41, 0x44, 0x12, 0x1b, 0xd8, 0x99, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x7f, 0x63, 0x5d, 0x3d, 0xc4, 0x00, 0x00, 0x00,
}
