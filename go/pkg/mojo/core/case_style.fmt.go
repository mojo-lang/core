// Code generated by mojo. DO NOT EDIT.
// Rerunning mojo will overwrite this file.
//
// Copyright 2021 Mojo-lang.org
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package core

import (
	"strconv"
)

var CaseStyleNames = map[int32]string{
	1: "snake",
	2: "screaming_snake",
	3: "kebab",
	4: "screaming_kebab",
	5: "camel",
	6: "lower_camel",
}

var CaseStyleValues = map[string]CaseStyle{
	"snake":           CaseStyle_CASE_STYLE_SNAKE,
	"screaming_snake": CaseStyle_CASE_STYLE_SCREAMING_SNAKE,
	"kebab":           CaseStyle_CASE_STYLE_KEBAB,
	"screaming_kebab": CaseStyle_CASE_STYLE_SCREAMING_KEBAB,
	"camel":           CaseStyle_CASE_STYLE_CAMEL,
	"lower_camel":     CaseStyle_CASE_STYLE_LOWER_CAMEL,
}

func (x CaseStyle) Format() string {
	s, ok := CaseStyleNames[int32(x)]
	if ok {
		return s
	}
	if int(x) == 0 {
		return "unspecified"
	}
	return strconv.Itoa(int(x))
}

func (x *CaseStyle) Parse(value string) error {
	if x != nil {
		s, ok := CaseStyleValues[value]
		if ok {
			*x = s
		} else {
			*x = CaseStyle_CASE_STYLE_SNAKE
		}
	} else {
		*x = CaseStyle_CASE_STYLE_SNAKE
	}
	return nil
}
