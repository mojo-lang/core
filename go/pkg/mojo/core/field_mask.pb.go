// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mojo/core/field_mask.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FieldMask struct {
	Paths                []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" gorm:"-" xml:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" gorm:"-" xml:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" gorm:"-" xml:"-" bson:"-"`
}

func (m *FieldMask) Reset()         { *m = FieldMask{} }
func (m *FieldMask) String() string { return proto.CompactTextString(m) }
func (*FieldMask) ProtoMessage()    {}
func (*FieldMask) Descriptor() ([]byte, []int) {
	return fileDescriptor_d19ac86d4ccb7202, []int{0}
}
func (m *FieldMask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldMask.Unmarshal(m, b)
}
func (m *FieldMask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldMask.Marshal(b, m, deterministic)
}
func (m *FieldMask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldMask.Merge(m, src)
}
func (m *FieldMask) XXX_Size() int {
	return xxx_messageInfo_FieldMask.Size(m)
}
func (m *FieldMask) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldMask.DiscardUnknown(m)
}

var xxx_messageInfo_FieldMask proto.InternalMessageInfo

func (m *FieldMask) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

func init() {
	proto.RegisterType((*FieldMask)(nil), "mojo.core.FieldMask")
}

func init() { proto.RegisterFile("mojo/core/field_mask.proto", fileDescriptor_d19ac86d4ccb7202) }

var fileDescriptor_d19ac86d4ccb7202 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xca, 0xcd, 0xcf, 0xca,
	0xd7, 0x4f, 0xce, 0x2f, 0x4a, 0xd5, 0x4f, 0xcb, 0x4c, 0xcd, 0x49, 0x89, 0xcf, 0x4d, 0x2c, 0xce,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0xc9, 0xe9, 0x81, 0xe4, 0x94, 0xcc, 0xb8,
	0x38, 0xdd, 0x40, 0xd2, 0xbe, 0x89, 0xc5, 0xd9, 0x42, 0x9a, 0x5c, 0xac, 0x05, 0x89, 0x25, 0x19,
	0xc5, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0x9c, 0x4e, 0xc2, 0xaf, 0xee, 0xc9, 0xf3, 0x83, 0x05, 0x74,
	0xf2, 0x73, 0x33, 0x4b, 0x52, 0x73, 0x0b, 0x4a, 0x2a, 0x83, 0x20, 0x2a, 0x9c, 0xe2, 0x67, 0x3c,
	0x96, 0x63, 0xe0, 0x12, 0xcb, 0x2f, 0x4a, 0xd7, 0x03, 0x19, 0x96, 0x93, 0x98, 0x07, 0x61, 0x80,
	0x4d, 0x75, 0xe2, 0x83, 0x9b, 0x19, 0x00, 0xb2, 0x30, 0x80, 0x31, 0x4a, 0x3f, 0x3d, 0xb3, 0x24,
	0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0x1f, 0xa4, 0x4e, 0x17, 0xa4, 0x03, 0xe2, 0xbc, 0xf4,
	0x7c, 0xfd, 0x82, 0xec, 0x74, 0x7d, 0xb8, 0x7b, 0xad, 0x41, 0x44, 0x12, 0x1b, 0xd8, 0xa9, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x61, 0x18, 0x35, 0x7a, 0xc8, 0x00, 0x00, 0x00,
}
