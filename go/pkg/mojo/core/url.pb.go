// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mojo/core/url.proto

package core

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Url struct {
	Scheme               string         `protobuf:"bytes,1,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Authority            *Url_Authority `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	Path                 string         `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Query                *Url_Query     `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Fragment             string         `protobuf:"bytes,7,opt,name=fragment,proto3" json:"fragment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Url) Reset()         { *m = Url{} }
func (m *Url) String() string { return proto.CompactTextString(m) }
func (*Url) ProtoMessage()    {}
func (*Url) Descriptor() ([]byte, []int) {
	return fileDescriptor_2799ce1b059c4724, []int{0}
}
func (m *Url) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Url.Unmarshal(m, b)
}
func (m *Url) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Url.Marshal(b, m, deterministic)
}
func (m *Url) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Url.Merge(m, src)
}
func (m *Url) XXX_Size() int {
	return xxx_messageInfo_Url.Size(m)
}
func (m *Url) XXX_DiscardUnknown() {
	xxx_messageInfo_Url.DiscardUnknown(m)
}

var xxx_messageInfo_Url proto.InternalMessageInfo

func (m *Url) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *Url) GetAuthority() *Url_Authority {
	if m != nil {
		return m.Authority
	}
	return nil
}

func (m *Url) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Url) GetQuery() *Url_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *Url) GetFragment() string {
	if m != nil {
		return m.Fragment
	}
	return ""
}

type Url_Authority struct {
	UserInfo             string   `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"userInfo,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int64    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Url_Authority) Reset()         { *m = Url_Authority{} }
func (m *Url_Authority) String() string { return proto.CompactTextString(m) }
func (*Url_Authority) ProtoMessage()    {}
func (*Url_Authority) Descriptor() ([]byte, []int) {
	return fileDescriptor_2799ce1b059c4724, []int{0, 0}
}
func (m *Url_Authority) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Url_Authority.Unmarshal(m, b)
}
func (m *Url_Authority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Url_Authority.Marshal(b, m, deterministic)
}
func (m *Url_Authority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Url_Authority.Merge(m, src)
}
func (m *Url_Authority) XXX_Size() int {
	return xxx_messageInfo_Url_Authority.Size(m)
}
func (m *Url_Authority) XXX_DiscardUnknown() {
	xxx_messageInfo_Url_Authority.DiscardUnknown(m)
}

var xxx_messageInfo_Url_Authority proto.InternalMessageInfo

func (m *Url_Authority) GetUserInfo() string {
	if m != nil {
		return m.UserInfo
	}
	return ""
}

func (m *Url_Authority) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Url_Authority) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Url_Query struct {
	Vals                 map[string]*Strings `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Url_Query) Reset()         { *m = Url_Query{} }
func (m *Url_Query) String() string { return proto.CompactTextString(m) }
func (*Url_Query) ProtoMessage()    {}
func (*Url_Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_2799ce1b059c4724, []int{0, 1}
}
func (m *Url_Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Url_Query.Unmarshal(m, b)
}
func (m *Url_Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Url_Query.Marshal(b, m, deterministic)
}
func (m *Url_Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Url_Query.Merge(m, src)
}
func (m *Url_Query) XXX_Size() int {
	return xxx_messageInfo_Url_Query.Size(m)
}
func (m *Url_Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Url_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Url_Query proto.InternalMessageInfo

func (m *Url_Query) GetVals() map[string]*Strings {
	if m != nil {
		return m.Vals
	}
	return nil
}

func init() {
	proto.RegisterType((*Url)(nil), "mojo.core.Url")
	proto.RegisterType((*Url_Authority)(nil), "mojo.core.Url.Authority")
	proto.RegisterType((*Url_Query)(nil), "mojo.core.Url.Query")
	proto.RegisterMapType((map[string]*Strings)(nil), "mojo.core.Url.Query.ValsEntry")
}

func init() { proto.RegisterFile("mojo/core/url.proto", fileDescriptor_2799ce1b059c4724) }

var fileDescriptor_2799ce1b059c4724 = []byte{
	// 446 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xcd, 0x8e, 0x94, 0x40,
	0x10, 0x4e, 0x2f, 0xc3, 0xba, 0xf4, 0xc6, 0xbf, 0x9e, 0x75, 0x25, 0x1c, 0x64, 0xa2, 0x89, 0x99,
	0xc3, 0x0a, 0xc9, 0xec, 0xc5, 0x68, 0x8c, 0x91, 0x44, 0x13, 0x4f, 0xae, 0x1a, 0x3c, 0x78, 0x31,
	0xcc, 0xd8, 0x03, 0x38, 0x0d, 0x85, 0x4d, 0xb3, 0x91, 0xb7, 0xf0, 0xa1, 0x7c, 0x0e, 0x1e, 0x80,
	0x57, 0xf0, 0x62, 0xaa, 0x61, 0x98, 0xd6, 0x78, 0xe9, 0xa4, 0xbe, 0xfa, 0xea, 0xab, 0x7c, 0x5f,
	0x17, 0x9d, 0x17, 0xf0, 0x0d, 0xc2, 0x0d, 0x48, 0x1e, 0x36, 0x52, 0x04, 0x95, 0x04, 0x05, 0xcc,
	0x41, 0x30, 0x40, 0xd0, 0xbb, 0x77, 0xe8, 0xaf, 0xe1, 0x07, 0xff, 0x3a, 0x30, 0x1e, 0xfe, 0x9e,
	0x51, 0x2b, 0x96, 0x82, 0x5d, 0xd0, 0xe3, 0x7a, 0x93, 0xf1, 0x82, 0xbb, 0x64, 0x41, 0x96, 0x4e,
	0x74, 0xd6, 0x77, 0xfe, 0x9d, 0x01, 0xb9, 0x80, 0x22, 0x57, 0xbc, 0xa8, 0x54, 0xfb, 0x61, 0xe4,
	0xb0, 0x77, 0xd4, 0x49, 0x1a, 0x95, 0x81, 0xcc, 0x55, 0xeb, 0x1e, 0x2d, 0xc8, 0xf2, 0x74, 0xe5,
	0x06, 0xd3, 0xae, 0x20, 0x96, 0x22, 0x78, 0xb5, 0xef, 0x47, 0xf7, 0xfb, 0xce, 0x9f, 0x4f, 0x74,
	0x43, 0xed, 0xa0, 0xc1, 0x1e, 0xd3, 0x59, 0x95, 0xa8, 0xcc, 0xb5, 0xf4, 0x72, 0xd6, 0x77, 0xfe,
	0x2d, 0xac, 0x0d, 0xb2, 0xee, 0xb3, 0x97, 0xd4, 0xfe, 0xde, 0x70, 0xd9, 0xba, 0xb6, 0x5e, 0x7a,
	0xf6, 0xcf, 0xd2, 0xf7, 0xd8, 0x8b, 0xe6, 0x7d, 0xe7, 0xdf, 0xd6, 0x34, 0x63, 0x7e, 0x98, 0x63,
	0x2b, 0x7a, 0xb2, 0x95, 0x49, 0x5a, 0xf0, 0x52, 0xb9, 0x37, 0xf4, 0xb2, 0xf3, 0xbe, 0xf3, 0xd9,
	0x1e, 0x33, 0x06, 0x26, 0x9e, 0xf7, 0x93, 0x50, 0x67, 0xb2, 0xc3, 0x2e, 0xa9, 0xd3, 0xd4, 0x5c,
	0x7e, 0xc9, 0xcb, 0x2d, 0x8c, 0x61, 0x69, 0x09, 0x04, 0xdf, 0x96, 0x5b, 0x30, 0x25, 0xf6, 0x18,
	0xfa, 0xcb, 0xa0, 0x56, 0x3a, 0xab, 0xd1, 0x1f, 0xd6, 0xa6, 0x3f, 0xac, 0x75, 0x0e, 0x20, 0x95,
	0xce, 0xc1, 0x1a, 0x73, 0x00, 0xf9, 0x17, 0x0f, 0x6b, 0xef, 0x17, 0xa1, 0xb6, 0x36, 0xcb, 0xde,
	0xd0, 0xd9, 0x75, 0x22, 0x6a, 0x97, 0x2c, 0xac, 0xe5, 0xe9, 0xea, 0xc1, 0xff, 0x02, 0x09, 0x3e,
	0x25, 0xa2, 0x7e, 0x5d, 0x2a, 0xd9, 0x0e, 0x8a, 0xc8, 0x37, 0x15, 0xb1, 0xf6, 0x6a, 0xea, 0x4c,
	0x34, 0xf6, 0x88, 0x5a, 0x3b, 0xde, 0x8e, 0xee, 0xee, 0xf6, 0x9d, 0x7f, 0x73, 0xc7, 0xcd, 0x30,
	0xb1, 0xcb, 0x5e, 0x50, 0xfb, 0x3a, 0x11, 0x0d, 0x1f, 0x0f, 0x80, 0x19, 0xab, 0x3f, 0x2a, 0x99,
	0x97, 0x69, 0x3d, 0xfc, 0x84, 0x26, 0x99, 0x3f, 0xa1, 0x81, 0x67, 0x47, 0x4f, 0x49, 0x14, 0xd3,
	0x73, 0x90, 0xa9, 0x1e, 0x14, 0x49, 0x99, 0x1e, 0x14, 0xa2, 0x93, 0x58, 0x8a, 0x2b, 0xbc, 0xd0,
	0x2b, 0xf2, 0x39, 0x4c, 0x73, 0x95, 0x35, 0xeb, 0x60, 0x03, 0x45, 0x88, 0x8c, 0x27, 0xc8, 0x1d,
	0x4e, 0x39, 0x85, 0xb0, 0xda, 0xa5, 0xe1, 0x74, 0xdb, 0xcf, 0xf1, 0x59, 0x1f, 0xeb, 0xdb, 0xbe,
	0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x2c, 0x4e, 0x1f, 0x14, 0x03, 0x00, 0x00,
}
