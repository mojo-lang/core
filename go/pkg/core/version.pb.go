// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mojo/core/version.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

/// Semantic Versioning 2.0.0
///
/// Given a version number MAJOR.MINOR.PATCH, increment the:
///
/// MAJOR version when you make incompatible API changes,
/// MINOR version when you add functionality in a backwards compatible manner, and
/// PATCH version when you make backwards compatible bug fixes.
/// Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.
///
type Version struct {
	/// major version
	Major int32 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	/// minor version
	Minor int32 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	/// patch version
	Patch int32 `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	/// pre-release version
	PreRelease string `protobuf:"bytes,4,opt,name=pre_release,json=preRelease,proto3" json:"pre_release,omitempty"`
	/// build metadata
	Build                string   `protobuf:"bytes,5,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cad9cf0c4e8238b, []int{0}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetMajor() int32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *Version) GetMinor() int32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *Version) GetPatch() int32 {
	if m != nil {
		return m.Patch
	}
	return 0
}

func (m *Version) GetPreRelease() string {
	if m != nil {
		return m.PreRelease
	}
	return ""
}

func (m *Version) GetBuild() string {
	if m != nil {
		return m.Build
	}
	return ""
}

func init() {
	proto.RegisterType((*Version)(nil), "mojo.core.Version")
}

func init() { proto.RegisterFile("mojo/core/version.proto", fileDescriptor_7cad9cf0c4e8238b) }

var fileDescriptor_7cad9cf0c4e8238b = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8f, 0xc1, 0x4e, 0x84, 0x30,
	0x10, 0x86, 0x53, 0x15, 0x0d, 0xd5, 0x13, 0x31, 0xda, 0x9b, 0xc4, 0x13, 0x31, 0xb1, 0x3d, 0x78,
	0xf4, 0xc6, 0x13, 0x10, 0x62, 0x3c, 0xec, 0x65, 0x53, 0xd8, 0x06, 0xca, 0x02, 0xd3, 0x0c, 0xb0,
	0x0f, 0xb0, 0x4f, 0xbe, 0x99, 0x0e, 0x97, 0x66, 0xfe, 0xef, 0x9f, 0x26, 0xdf, 0xc8, 0xf7, 0x09,
	0x06, 0x30, 0x2d, 0xa0, 0x33, 0x17, 0x87, 0x8b, 0x87, 0x59, 0x07, 0x84, 0x15, 0xb2, 0x94, 0x0a,
	0x4d, 0xc5, 0xe7, 0x55, 0xc8, 0xa7, 0x7f, 0x2e, 0xb3, 0x57, 0x99, 0x4c, 0x76, 0x00, 0x54, 0x22,
	0x17, 0x45, 0x52, 0x73, 0x88, 0xd4, 0xcf, 0x80, 0xea, 0x6e, 0xa7, 0x14, 0x88, 0x06, 0xbb, 0xb6,
	0xbd, 0xba, 0x67, 0x1a, 0x43, 0xf6, 0x21, 0x9f, 0x03, 0xba, 0x23, 0xba, 0xd1, 0xd9, 0xc5, 0xa9,
	0x87, 0x5c, 0x14, 0x69, 0x2d, 0x03, 0xba, 0x9a, 0x09, 0x7d, 0x6b, 0x36, 0x3f, 0x9e, 0x54, 0x12,
	0x2b, 0x0e, 0xe5, 0x9f, 0x7c, 0x03, 0xec, 0x34, 0x59, 0x8d, 0x76, 0xe6, 0x21, 0xea, 0x95, 0x2f,
	0xbb, 0x5b, 0x45, 0xde, 0x95, 0x38, 0x7c, 0x75, 0x7e, 0xed, 0xb7, 0x46, 0xb7, 0x30, 0x19, 0xda,
	0xfa, 0xa6, 0x7d, 0x3e, 0xb1, 0x03, 0x13, 0xce, 0x3c, 0xff, 0xd2, 0xd3, 0x3c, 0xc6, 0x63, 0x7f,
	0x6e, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x90, 0x5f, 0x46, 0x07, 0x01, 0x00, 0x00,
}
