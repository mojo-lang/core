// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mojo/core/platform.proto

package org.mojolang.mojo.core;

/**
 * Protobuf enum {@code mojo.core.Architecture}
 */
public enum Architecture
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ARCHITECTURE_UNSPECIFIED = 0;</code>
   */
  ARCHITECTURE_UNSPECIFIED(0),
  /**
   * <code>ARCHITECTURE_X86 = 1;</code>
   */
  ARCHITECTURE_X86(1),
  /**
   * <code>ARCHITECTURE_AMD64 = 2;</code>
   */
  ARCHITECTURE_AMD64(2),
  /**
   * <code>ARCHITECTURE_ARM = 5;</code>
   */
  ARCHITECTURE_ARM(5),
  /**
   * <code>ARCHITECTURE_ARM64 = 6;</code>
   */
  ARCHITECTURE_ARM64(6),
  /**
   * <code>ARCHITECTURE_WASM = 10;</code>
   */
  ARCHITECTURE_WASM(10),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ARCHITECTURE_UNSPECIFIED = 0;</code>
   */
  public static final int ARCHITECTURE_UNSPECIFIED_VALUE = 0;
  /**
   * <code>ARCHITECTURE_X86 = 1;</code>
   */
  public static final int ARCHITECTURE_X86_VALUE = 1;
  /**
   * <code>ARCHITECTURE_AMD64 = 2;</code>
   */
  public static final int ARCHITECTURE_AMD64_VALUE = 2;
  /**
   * <code>ARCHITECTURE_ARM = 5;</code>
   */
  public static final int ARCHITECTURE_ARM_VALUE = 5;
  /**
   * <code>ARCHITECTURE_ARM64 = 6;</code>
   */
  public static final int ARCHITECTURE_ARM64_VALUE = 6;
  /**
   * <code>ARCHITECTURE_WASM = 10;</code>
   */
  public static final int ARCHITECTURE_WASM_VALUE = 10;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Architecture valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Architecture forNumber(int value) {
    switch (value) {
      case 0: return ARCHITECTURE_UNSPECIFIED;
      case 1: return ARCHITECTURE_X86;
      case 2: return ARCHITECTURE_AMD64;
      case 5: return ARCHITECTURE_ARM;
      case 6: return ARCHITECTURE_ARM64;
      case 10: return ARCHITECTURE_WASM;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Architecture>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Architecture> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Architecture>() {
          public Architecture findValueByNumber(int number) {
            return Architecture.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.mojolang.mojo.core.PlatformProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final Architecture[] VALUES = values();

  public static Architecture valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Architecture(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:mojo.core.Architecture)
}

